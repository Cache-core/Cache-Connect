set(CacheConnectLibrary_SRS
    interfaces/iclient.cpp
    interfaces/iclientmanager.cpp
    interfaces/iconnection.cpp
    interfaces/icontrolcenter.cpp
    interfaces/icryptengine.cpp
    interfaces/iserver.cpp
    interfaces/itransfer.cpp
    interfaces/itransfermanager.cpp
    interfaces/iusersettings.cpp
    
    client.cpp
    clientinformation.cpp
    clientmanager.cpp
    clientthreadmanager.cpp
    connection.cpp
    controlcenter.cpp
    controlcenter_p.cpp
    crypt.cpp
    cryptengine.cpp
    debug.cpp
    debugtransfer.cpp
    file.cpp
    message.cpp
    messageinformation.cpp
    messageserver.cpp
    rsapair.cpp
    securetunnel.cpp
    transfer.cpp
    transfermanager.cpp
    transferthreadmanager.cpp
    transferserver.cpp
    usersettings.cpp
)

set(CacheConnectLibrary_Interfaces_HEADERS
    interfaces/iclient.h
    interfaces/iclientmanager.h
    interfaces/iconnection.h
    interfaces/icontrolcenter.h
    interfaces/icryptengine.h
    interfaces/iserver.h
    interfaces/itransfer.h
    interfaces/itransfermanager.h
    interfaces/iusersettings.h
)

set(CacheConnectLibrary_HEADERS
    client.h
    clientinformation.h
    clientmanager.h
    clientthreadmanager.h
    connection.h
    controlcenter.h
    controlcenter_p.h
    crypt.h
    cryptengine.h
    debug.h
    debugtransfer.h
    file.h
    message.h
    messageinformation.h
    messageserver.h
    rsapair.h
    securetunnel.h
    transfer.h
    transfermanager.h
    transferthreadmanager.h
    transferserver.h
    usersettings.h
)

add_library(CacheConnect SHARED ${CacheConnectLibrary_SRS})
target_link_libraries(CacheConnect Qt5::Core Qt5::Network ssl crypto)
install(TARGETS CacheConnect LIBRARY DESTINATION lib)
install(FILES ${CacheConnectLibrary_Interfaces_HEADERS} DESTINATION include/cacheconnect/interfaces)
install(FILES ${CacheConnectLibrary_HEADERS} DESTINATION include/cacheconnect)
target_include_directories(CacheConnect SYSTEM PUBLIC ${CMAKE_SOURCE_DIR}/src/lib)
